import abc
from _typeshed import Incomplete
from google.cloud.firestore_v1 import _helpers
from google.cloud.firestore_v1.base_document import BaseDocumentReference as BaseDocumentReference

class BaseBatch(metaclass=abc.ABCMeta):
    write_results: Incomplete
    commit_time: Incomplete
    def __init__(self, client) -> None: ...
    def __len__(self) -> int: ...
    def __contains__(self, reference: BaseDocumentReference): ...
    @abc.abstractmethod
    def commit(self): ...
    def create(self, reference: BaseDocumentReference, document_data: dict) -> None: ...
    def set(self, reference: BaseDocumentReference, document_data: dict, merge: bool | list = False) -> None: ...
    def update(self, reference: BaseDocumentReference, field_updates: dict, option: _helpers.WriteOption | None = None) -> None: ...
    def delete(self, reference: BaseDocumentReference, option: _helpers.WriteOption | None = None) -> None: ...

class BaseWriteBatch(BaseBatch, metaclass=abc.ABCMeta): ...
