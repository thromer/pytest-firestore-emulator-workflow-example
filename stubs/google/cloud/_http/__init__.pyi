from _typeshed import Incomplete

API_BASE_URL: str
DEFAULT_USER_AGENT: Incomplete
CLIENT_INFO_HEADER: str
CLIENT_INFO_TEMPLATE: Incomplete

class Connection:
    def __init__(self, client, client_info: Incomplete | None = None) -> None: ...
    @property
    def USER_AGENT(self): ...
    @USER_AGENT.setter
    def USER_AGENT(self, value) -> None: ...
    @property
    def user_agent(self): ...
    @user_agent.setter
    def user_agent(self, value) -> None: ...
    @property
    def extra_headers(self): ...
    @extra_headers.setter
    def extra_headers(self, value) -> None: ...
    @property
    def credentials(self): ...
    @property
    def http(self): ...

class JSONConnection(Connection):
    API_BASE_URL: str | None
    API_BASE_MTLS_URL: str | None
    ALLOW_AUTO_SWITCH_TO_MTLS_URL: bool
    API_VERSION: str | None
    API_URL_TEMPLATE: str | None
    def get_api_base_url_for_mtls(self, api_base_url: Incomplete | None = None): ...
    def build_api_url(self, path, query_params: Incomplete | None = None, api_base_url: Incomplete | None = None, api_version: Incomplete | None = None): ...
    def api_request(self, method, path, query_params: Incomplete | None = None, data: Incomplete | None = None, content_type: Incomplete | None = None, headers: Incomplete | None = None, api_base_url: Incomplete | None = None, api_version: Incomplete | None = None, expect_json: bool = True, _target_object: Incomplete | None = None, timeout=..., extra_api_info: Incomplete | None = None): ...
